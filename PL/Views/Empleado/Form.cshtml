@model ML.Empleado
@{
    ViewData["Title"] = "Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="container">
    <h2>Form</h2>
    <p>Aqui puede ver y actualizar los datos de la empresa</p>

    <div class="row">
        <div class=" col-md-12">

            @using (Html.BeginForm("Form", "Empleado", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                <div class="form-horizontal">


                    <div class="row">

                        <div class="col-md-3">

                                @Html.LabelFor(model => model.NombreEmpleado)

                                <div class="input-group mb-3">

                                    <span class="input-group-text" id="basic-addon1"><i class="bi bi-person-circle"></i></span>
                                    @Html.TextBoxFor(model => model.NombreEmpleado, new { @class = "form-control", @id = "txtNombre", @onkeypress="return SoloLetras(event,'lblNombre')" })

                                    @Html.ValidationMessageFor(model => model.NombreEmpleado)

                                </div>
                                @Html.Label("",null, new{@id="lblNombre"})
                         </div>   @*NombreUsuario*@
                            <div class="col-md-3">

                            <div class="form-group">

                                @Html.LabelFor(model => model.ApellidoPaternoE)

                                @Html.TextBoxFor(model => model.ApellidoPaternoE, new { @class = "form-control", @id = "txtNombre" })

                                @Html.ValidationMessageFor(model => model.ApellidoPaternoE)

                            </div>

                        </div>
                        <div class="col-md-3">

                            <div class="form-group ">

                                @Html.LabelFor(model => model.ApellidoMaternoE)

                                @Html.TextBoxFor(model => model.ApellidoMaternoE, new { @class = "form-control", @id = "txtNombre" })

                                @Html.ValidationMessageFor(model => model.ApellidoMaternoE)

                            </div>

                        </div>

                        <div class="col-md-3">
                            @Html.LabelFor(model => model.FechaNacimiento)
                            <div class="input-group mb-3">

                                <span class="input-group-text" id="basic-addon1"><i class="bi bi-calendar-week"></i></span>
                                @Html.TextBoxFor(model => model.FechaNacimiento, new { @class = "form-control", @id="txtFechaNacimiento" })

                                @Html.ValidationMessageFor(model => model.FechaNacimiento)

                            </div>

                        </div> @*FechaNacimiento*@

                    </div>

                    <div class="row">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Email)
                            <div class="input-group mb-3">

                            <span class="input-group-text" id="basic-addon1"><i class="bi bi-envelope-at"></i></span>
                            @Html.TextBoxFor(model => model.Email, new { @class = "form-control", @id = "txtEmail" })

                            @Html.ValidationMessageFor(model => model.Email)

                        </div>

                        </div>

                            <div class="col-md-3">
                            @Html.LabelFor(model => model.Telefono)
                                <div class="input-group mb-3">

                                
                                <span class="input-group-text" id="basic-addon1"><i class="bi bi-telephone"></i></span>
                                @Html.TextBoxFor(model => model.Telefono, new { @class = "form-control", @id = "txtTelefono" })

                                @Html.ValidationMessageFor(model => model.Telefono)

                            </div>

                        </div>
                    </div>

                    <div class="row">

                        <div class="col-md-3">
                            @Html.LabelFor(model => model.NumeroEmpleado, new { @class = "hidden" }) @*LabelFor hace referencia a una etiqueta con texto*@

                            <div class="input-group mb-3">
                                <span class="input-group-text" id="basic-addon1"><i class="bi bi-person-bounding-box"></i></span>
                                
                                @Html.TextBoxFor(model => model.NumeroEmpleado, new { @class = "hidden form-control" }) @*Crea una caja de texto con el nombre que le indiquemos  y con un valor por defecto en el segundo parámetro.*@

                                @Html.ValidationMessageFor(model => model.NumeroEmpleado)

                            </div>
                            
                        </div>
                        @Html.HiddenFor(model => model.Action) @*Para no perder el numero de empleado*@
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.RFC)
                            <div class="input-group mb-3">


                                <span class="input-group-text" id="basic-addon1"><i class="bi bi-file-earmark-binary"></i></span>
                                @Html.TextBoxFor(model => model.RFC, new { @class = "form-control", @id = "txtRFC" })

                                @Html.ValidationMessageFor(model => model.RFC)

                            </div>

                        </div>

                        <div class="col-md-3">
                            @Html.LabelFor(model => model.NSS)
                            <div class="input-group mb-3">

                                <span class="input-group-text" id="basic-addon1"><i class="bi bi-hospital"></i></span>
                                @Html.TextBoxFor(model => model.NSS, new { @class = "form-control", @id = "txtNSS" })

                                @Html.ValidationMessageFor(model => model.NSS)

                            </div>

                        </div> @*NSS*@
                        <div class="col-md-3">

                            @Html.LabelFor(model => model.Empresa.IdEmpresa)

                            <div class="input-group mb-3">

                                <span class="input-group-text" id="basic-addon1"><i class="bi bi-ui-checks-grid"></i></span>
                                @Html.DropDownListFor(model => model.Empresa.IdEmpresa, new SelectList(Model.Empresa.Empresas, "IdEmpresa", "NombreEmpresa"), "Seleccione un rol", new { @class = "form-control" })

                                @Html.ValidationMessageFor(model => model.Empresa.IdEmpresa)

                            </div>

                        </div>  @*Empresa*@
                        

                        <div class="col-md-3">
                            @Html.LabelFor(model => model.FechaIngreso)
                            <div class="input-group mb-3">

                                <span class="input-group-text" id="basic-addon2"><i class="bi bi-calendar-week"></i></span>
                                @Html.TextBoxFor(model => model.FechaIngreso, new { @class = "form-control", @id="txtIngreso" })

                                @Html.ValidationMessageFor(model => model.FechaIngreso)

                            </div>

                        </div> @*FechaIngreso*@

                    </div>

                    <div class="row">
                        <div class=" offset-md-12">

                            @Html.LabelFor(model=> model.Foto)

                            <div class="input-group mb-3">
                                <input type="file" name="ImagenData" id="fileName" onchange="validateFileType(this), Previsualizar(this);">
                            </div>

                            @if (Model.Foto != null)
                            {

                                <img id="Img" src="data:image/*;base64,@Model.Foto" style="width:100px ; height:100px" />

                            }
                            else
                            {
                                <img id="Img" src="~/Imagen/NoFoto.jpg" style="width:100px ; height:100px" />

                            }

                            @Html.ValidationMessageFor(model => model.Foto)
                        </div>   @*Imagen*@
                        @*@Html.HiddenFor(model => model.Foto) @*Para no perder la imagen
                        @Html.HiddenFor(model => model.Action) @*Para no perder el numero de empleado*@
                    </div>
                    @Html.HiddenFor(model => model.Foto) @*Para no perder la imagen*@
                    
                    <div class="form-group">

                        <div class="col-md-3">

                            <input type="submit" value="Guardar" class="btn btn-success" />
                            @*Se crea el boton de guardar*@

                            @Html.ActionLink("Regresar", "GetAll", "Empresa", htmlAttributes: new { @class = "btn btn-danger" })
                            @*Se crea el boton de regresar se regresa al metodo GetAll en el controlador de usuario*@
                        </div>

                    </div>

                </div>
            }

        </div>


    </div>

</div>

@section Scripts
    {
    <script src="~/lib/jquery/dist/jquery.js"></script>
    <link rel="stylesheet" href="//code.jquery.com/ui/1.13.1/themes/base/jquery-ui.css">
    <link rel="stylesheet" href="/resources/demos/style.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.js"></script>
    <script src="https://code.jquery.com/ui/1.13.1/jquery-ui.js"></script>


    <script type="text/javascript">
        function Previsualizar(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    $('#Img').attr('src', e.target.result);
                };
                reader.readAsDataURL(input.files[0]);


            }
        }  /*Previsualizar la imagen*/

        function validateFileType() {
            var fileName = document.getElementById("fileName").value;
            var idxDot = fileName.lastIndexOf(".") + 1;
            var extFile = fileName.substr(idxDot, fileName.length).toLowerCase();
            if (extFile == "jpg" || extFile == "jpeg" || extFile == "png") {
                //TO DO
            } else {
                alert("Solo archivos jpg/jpeg y png son aceptados");
            }
        }  /*Validar el tipo de imagen*/

    </script>   @*Funciones de validacion *@

    <script type="text/javascript">
        $(function () {
            $("#txtFechaNacimiento").datepicker({
                dateFormat: 'dd-mm-yy',
                changeMonth: true,
                changeYear: true,
                yearRange: "1930:2050"
            });
        });
    </script>@*Agregar Calendario*@

    <script type="text/javascript">
        $(function () {
            $("#txtIngreso").datepicker({
                dateFormat: 'dd-mm-yy',
                changeMonth: true,
                changeYear: true,
                yearRange: "1930:2050"
            });
        });
    </script>@*Agregar Calendario*@

    <script type="text/javascript">
        function SoloLetras(e, controlId) {
            var caracter = e.key;
            if (!/^[a-zA-Z]/g.test(caracter)) {
                $('#' + controlId).text("Solo se aceptan letras");
                $('#' + controlId).css({ "color": "red" });
                return false;
            }
            else {
                $('#' + controlId).text("");
                return true;
            }
        } /*Validar solo letras*/
    </script>
    
}
